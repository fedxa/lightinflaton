(load "chidecays.lisp")

(in-package :chidecays)

(with-open-file (o "t.txt" :direction :output :if-exists :supersede)
  (loop for i from 0 to 100
     do (let ((m (exp (+ (log 0.1) (* i (/ (- (log 10) (log 0.1)) 100))))))
	  (print (coerce m 'single-float) o)
	  (princ (coerce (gammatot m 1d-13) 'single-float) o)
	  (princ " " o)
	  (princ (coerce (gammaee m 1d-13) 'single-float) o)
	  (princ " " o)
	  (princ (coerce (gammamumu m 1d-13) 'single-float) o)
	  (princ " " o)
	  (princ (coerce (gammatautau m 1d-13) 'single-float) o)
	  (princ " " o)
	  (princ (coerce (gammapipitot m 1d-13) 'single-float) o)
	  (princ " " o)
	  (princ (coerce (gammaKKtot m 1d-13) 'single-float) o)
	  (princ " " o)
	  (princ (coerce (gammagg m 1d-13) 'single-float) o)
	  (princ " " o)
	  (princ (coerce (gammassKcut m 1d-13) 'single-float) o)
	  (princ " " o)
	  (princ (coerce (gammacc m 1d-13) 'single-float) o)
	  (princ " " o)
	  (princ (coerce (gammabb m 1d-13) 'single-float) o)
	  (princ " " o)
	  (princ (coerce (gammatt m 1d-13) 'single-float) o)
	  )))
